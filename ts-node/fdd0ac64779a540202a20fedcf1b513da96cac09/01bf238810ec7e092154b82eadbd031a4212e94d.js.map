{"version":3,"file":"/home/pioneer/work/jason/actodo_api/src/tools/_helpers.ts","sources":["/home/pioneer/work/jason/actodo_api/src/tools/_helpers.ts"],"names":[],"mappings":";AAGA,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,4CAAqC;AAGrC;;;EAGE;AACF,oBAAoB,GAAY;IAC9B,IAAI,IAAI,GAAI,GAAG,CAAC,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;IAC1C,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/C,IAAI,IAAI,GAAG,CAAC;IACZ,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AACD;;;;;EAKE;AACF,6BAA6B,GAAa,EAAE,GAAa,EAAE,IAAkB;IAC3E,WAAW,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK;QACxD,EAAE,CAAA,CAAC,GAAG,CAAC,CAAC,CAAC;YACL,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACrB,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,GAAG,CAAC,OAAO;aAErB,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,2CAA2C;YAC3C,MAAM,CAAC,cAAI,CAAC,KAAK,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC,KAAK,EAAE;iBAC5C,IAAI,CAAC,CAAC,IAAI;gBACT,EAAE,CAAA,CAAC,IAAI,IAAI,IAAI,CAAC,CAChB,CAAC;oBACC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;wBACnB,OAAO,EAAE,CAAC;wBACV,OAAO,EAAE,kCAAkC;qBAC5C,CAAC,CAAC;gBACL,CAAC;gBACD,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;gBAChB,IAAI,EAAE,CAAC;YACT,CAAC,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG;gBACT,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBACnB,OAAO,EAAE,CAAC;oBACV,OAAO,EAAE,GAAG,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;EAEE;AACF;IACE,IAAI,IAAI,GAAG,EAAE,CAAC;IACd,IAAI,QAAQ,GAAG,gEAAgE,CAAC;IAChF,GAAG,CAAA,CAAE,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;QACpB,IAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IACzE,yDAAyD;IACzD,MAAM,CAAC,IAAI,CAAC;AACd,CAAC;AAGD,MAAM,CAAC,OAAO,GAAG;IACf,UAAU;IACV,mBAAmB;CACpB,CAAC","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\nimport {IRequest} from '../classes/IRequest';\nimport bookshelf from '../db/bookshelf';\nconst bcrypt = require('bcryptjs');\nconst tokenHelper = require('./tokens');\nvar util = require('util');\nimport User from '../db/models/user';\n\n\n/**\n* @description Get Base uri of current api call\n* @param req: Request request object containing uri information\n*/\nfunction getBaseUrl(req: Request) {\n  let base =  req.secure ? 'https' : 'http';\n  base += '://' + req.headers['host'].toString();\n  base += '/';\n  return base;\n}\n/**\n* @description Throws an error if the user is not authenticated\n* @param req: Request\n* @param res: Response\n* @param next: Callback function (NextFunction)\n*/\nfunction ensureAuthenticated(req: IRequest, res: Response, next: NextFunction) {\n  tokenHelper.getUserIdFromRequest(req, (err, user_id, token) => {\n    if(err) {\n        res.status(401).json({\n        success: 0,\n        message: err.message\n        // message: \"Expired or wrong token\"\n      });\n    } else {\n      // check if the user still exists in the db\n      return User.where({user_id: user_id}).fetch()\n      .then((user) => {\n        if(user == null)\n        {\n          res.status(400).json({\n            success: 0,\n            message: \"You are no longer a member here.\"\n          });\n        }\n        req.user = user;\n        next();\n      })\n      .catch((err) => {\n        res.status(401).json({\n          success: 0,\n          message: err.message\n        });\n      });\n    }\n  });\n}\n\n/**\n* @description Creates a unique group code and returns it\n*/\nfunction createGroupCode() {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for( var i=0; i < 9; i++ )\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n  //TODO: check that code doesn't already exist in database\n  return text;\n}\n\n\nmodule.exports = {\n  getBaseUrl,\n  ensureAuthenticated,\n};\n"]}