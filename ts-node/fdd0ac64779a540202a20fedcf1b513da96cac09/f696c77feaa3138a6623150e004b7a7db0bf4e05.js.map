{"version":3,"file":"/home/pioneer/work/jason/actodo_api/src/db/models/action.ts","sources":["/home/pioneer/work/jason/actodo_api/src/db/models/action.ts"],"names":[],"mappings":";AACA,4CAAqC;AAGrC,iCAA0B;AAI1B,+CAAuC;AAEvC,MAAM,eAAe,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC,eAAe,CAAC;;AACjF,kBAAe,mBAAS,CAAC,KAAK,CAAC,MAAM,CAAC;IACpC,SAAS,EAAE,QAAQ;IACnB,aAAa,EAAE,IAAI;IACnB,WAAW,EAAE,WAAW;IAExB,WAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,qBAAU,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;IACxE,CAAC;IACD,OAAO,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC,UAAS,EAAE;YAC5E,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;QAAC,CAAC,CAAC,CAAC;IACnF,CAAC;IACD,OAAO,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,cAAI,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU,EAAE;IACZ,CAAC;CAEF,EAAE;IACD,SAAS,EAAE,UAAS,SAAiB;QACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,SAAS,EAAC,SAAS,EAAC,CAAC,CAAC,KAAK,CAAC,EAAC,WAAW,EAAC;gBAC5D,EAAC,SAAS,EAAC,UAAS,EAAE;wBAClB,EAAE,CAAC,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;oBACnE,CAAC,EAAC;gBACF,aAAa;aAAC,EAAC,CAAC,CAAA;IAClB,CAAC;CACF,CAAC,CAAC","sourcesContent":["\nimport bookshelf from '../bookshelf';\n\nimport GroupUser from './group_user';\nimport User from './user';\nimport GroupSetting from './group_settings';\nimport GroupTag from './group_tag';\nimport Group from './group';\nimport ActionType from './action_type';\n\nconst ValidationError = require('bookshelf-validate/lib/errors').ValidationError;\nexport default bookshelf.Model.extend({\n  tableName: 'action',\n  hasTimestamps: true,\n  idAttribute: 'action_id',\n\n  action_type: function() {\n    return this.belongsTo(ActionType, 'action_type_id', 'action_type_id');\n  },\n  creator: function() {\n    return this.belongsTo(User, 'created_by_user_id', 'user_id').query(function(qb){\n      qb.column('user_id', 'first_name', 'last_name', 'avatar_file', 'username'); });\n  },\n  deletor: function() { \n    return this.belongsTo(User, 'deleted_by_user_id', 'user_id');\n  },\n\n  initialize: function() {\n  },\n \n}, {\n  getAction: function(action_id: number){\n    return this.where({action_id:action_id}).fetch({withRelated:[\n    {'creator':function(qb) {\n        qb.column('user_id', 'first_name', 'last_name', 'avatar_file');\n    }},\n    'action_type']})\n  }\n});"]}