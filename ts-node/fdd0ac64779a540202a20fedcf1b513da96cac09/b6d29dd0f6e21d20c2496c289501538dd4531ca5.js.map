{"version":3,"file":"/home/pioneer/work/jason/actodo_api/test/unit/tools.helpers.test.ts","sources":["/home/pioneer/work/jason/actodo_api/test/unit/tools.helpers.test.ts"],"names":[],"mappings":";AAAA,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACnC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE3B,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;AAG9B,6BAA6B;AAE7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;AAE7B,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAClC,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACnD,MAAM,OAAO,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAGpD,QAAQ,CAAC,gBAAgB,EAAE;IAEzB,oCAAoC;IACpC,yCAAyC;IACzC,gEAAgE;IAChE,4BAA4B;IAC5B,+BAA+B;IAC/B,cAAc;IACd,QAAQ;IACR,MAAM;IAEN,0CAA0C;IAC1C,kDAAkD;IAClD,yDAAyD;IACzD,0BAA0B;IAC1B,cAAc;IACd,QAAQ;IACR,MAAM;AAER,CAAC,CAAC,CAAC","sourcesContent":["const bcrypt = require('bcryptjs');\nvar util = require('util');\n\nprocess.env.NODE_ENV = 'test';\n\nimport * as mocha from 'mocha';\nimport * as chai from 'chai';\n\nconst should = chai.should();\n\nconst salt = bcrypt.genSaltSync();\nconst hash = bcrypt.hashSync('testpassword', salt);\nconst helpers = require('../../src/tools/_helpers');\n\n\ndescribe('auth : helpers', () => {\n\n  // describe('comparePass()', () => {\n  //   it('should return true', (done) => {\n  //     const output = helpers.comparePass('testpassword', hash);\n  //     should.exist(output);\n  //     output.should.eql(true);\n  //     done();\n  //   });\n  // });\n\n  // describe('getUserByUsername()', () => {\n  //   it('should return a user object', (done) => {\n  //     const user = helpers.getUserByUsername('seeder1');\n  //     should.exist(user);\n  //     done();\n  //   });\n  // });\n\n});\n"]}