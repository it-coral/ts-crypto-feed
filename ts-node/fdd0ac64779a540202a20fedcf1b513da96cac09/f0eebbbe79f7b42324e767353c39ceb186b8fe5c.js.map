{"version":3,"file":"/home/pioneer/work/jason/actodo_api/src/db/models/group.ts","sources":["/home/pioneer/work/jason/actodo_api/src/db/models/group.ts"],"names":[],"mappings":";AACA,4CAAqC;AAGrC,iCAA0B;AAC1B,qDAA4C;AAC5C,2CAAmC;AACnC,mCAA4B;AAC5B,qCAA8B;AAE9B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,MAAM,eAAe,GAAG,OAAO,CAAC,+BAA+B,CAAC,CAAC,eAAe,CAAC;;AACjF,kBAAe,mBAAS,CAAC,KAAK,CAAC,MAAM,CAAC;IACpC,SAAS,EAAE,OAAO;IAClB,aAAa,EAAE,IAAI;IACnB,WAAW,EAAE,UAAU;IACvB,KAAK,EAAE;QACL,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,cAAI,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;IAC9F,CAAC;IACD,IAAI,EAAE;QACJ,mFAAmF;QACnF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAQ,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAExD,CAAC;IACD,OAAO,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAY,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;IACD,OAAO,EAAE;QACP,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,cAAI,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC;QACjE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IACD;MACE;IACF,OAAO,EAAE;QACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,UAAS,EAAE;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IACD;;;MAGE;IACF,YAAY,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAM,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC,KAAK,CAAC,UAAS,EAAE;YACnE,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC;iBACvB,KAAK,CAAC;gBACL,IAAI,CAAC,KAAK,CAAC;oBACT,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;yBAC1E,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAA;gBAC/D,CAAC,CAAC;qBACD,OAAO,CAAC;oBACP,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAA;gBAClI,CAAC,CAAC;qBACD,OAAO,CAAC;oBACP,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;gBACzF,CAAC,CAAC,CAAA;YAAA,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,EAAE;QACV,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAE1C,mBAAmB;QACnB,0BAA0B;QAC1B,cAAc;QACd,wDAAwD;QACxD,SAAS;QACT,oBAAoB;QACpB,8DAA8D;QAC9D,QAAQ;QACR,OAAO;QACP,OAAO;QACP,0BAA0B;QAC1B,OAAO;QACP,0CAA0C;IAC5C,CAAC;IAED,iBAAiB,EAAE,UAAS,KAAK,EAAE,UAAU,EAAE,OAAO;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,eAAK;iBACT,KAAK,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;iBACpD,KAAK,CAAC,EAAE,CAAC;iBACT,IAAI,CAAC,UAAU,QAAQ;gBACtB,EAAE,CAAC,CAAC,QAAQ,CAAC;oBAAC,MAAM,IAAI,eAAe,CAAC,2BAA2B,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAED,iBAAiB,EAAE,UAAS,KAAK,EAAE,UAAU,EAAE,OAAO;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,eAAK;iBACT,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;iBACxC,KAAK,CAAC,EAAE,CAAC;iBACT,IAAI,CAAC,UAAU,QAAQ;gBACtB,EAAE,CAAC,CAAC,QAAQ,CAAC;oBAAC,MAAM,IAAI,eAAe,CAAC,qBAAqB,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;CACF,EAAE;IAED,mBAAmB,EAAE,UAAS,QAAgB,EAAE,WAAgB;QAC9D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,QAAQ,EAAC,QAAQ,EAAC,CAAC,CAAC,KAAK,CAAC,EAAC,WAAW,EAAC,WAAW,EAAC,CAAC,CAAA;IACzE,CAAC;CACF,CAAC,CAAC","sourcesContent":["\nimport bookshelf from '../bookshelf';\n\nimport GroupUser from './group_user';\nimport User from './user';\nimport GroupSetting from './group_settings';\nimport GroupTag from './group_tag';\nimport Group from './group';\nimport Action from './action';\n\nvar moment = require('moment');\nconst ValidationError = require('bookshelf-validate/lib/errors').ValidationError;\nexport default bookshelf.Model.extend({\n  tableName: 'group',\n  hasTimestamps: true,\n  idAttribute: 'group_id',\n  users: function() {\n    return this.belongsToMany(User, 'group_user', 'group_id', 'user_id', 'group_id', 'user_id');\n  },\n  tags: function() {\n    // return this.hasMany(GroupTag, 'group_id', 'group_id').query({}).column(['tag']);\n    return this.hasMany(GroupTag, 'group_id', 'group_id');\n    \n  },\n  setting: function() {\n    return this.hasOne(GroupSetting, 'group_id', 'group_id');\n  },\n  creator: function() {\n    var data = this.belongsTo(User, 'created_by_user_id', 'user_id');\n    return data;\n  },\n  /* all actions\n  */\n  actions: function(){\n    return this.hasMany(Action, 'group_id', 'group_id').query(function(qb){\n    });\n  },\n  /* not deleted actions\n     open actions\n     actions ended in 2 months ago\n  */\n  open_actions: function() {\n    return this.hasMany(Action, 'group_id', 'group_id').query(function(qb){\n      qb.whereNull('deleted_at')\n        .where(function(){ \n          this.where(function(){\n            this.where('end_at', '>', moment().month(-2).format(\"YYYY-MM-DD HH:MM:SS\"))\n            .where('end_at', '<', moment().format(\"YYYY-MM-DD HH:MM:SS\"))\n          })\n          .orWhere(function(){\n            this.where('start_at', '<', moment().format(\"YYYY-MM-DD HH:MM:SS\")).where('end_at', '>', moment().format(\"YYYY-MM-DD HH:MM:SS\"))\n          })\n          .orWhere(function(){\n            this.where('start_at', '<', moment().format(\"YYYY-MM-DD HH:MM:SS\")).whereNull('end_at')\n          })});\n    });\n  },\n\n  initialize: function() {\n    this.on(\"saving\", this._assertNameUnique);\n    this.on(\"saving\", this._assertCodeUnique);\n    \n    // if(this.isNew())\n    //   this.validations =  {\n    //     name: [\n    //       { method: 'isRequired', error:'Name Required'},\n    //     ],\n    //     group_code: [\n    //       { method: 'isRequired', error:'Group Code Required'},\n    //     ]\n    //   };\n    // else\n    //   this.validations =  {\n    //   };\n    // this.on('saving', this.validateOnSave);\n  },\n \n  _assertCodeUnique: function(model, attributes, options) {\n    if (this.hasChanged('group_code')) {\n      return Group\n        .query('where', 'group_code', this.get('group_code'))\n        .fetch({})\n        .then(function (existing) {\n          if (existing) throw new ValidationError('Choose Another Group Code');\n        });\n    }\n  },\n\n  _assertNameUnique: function(model, attributes, options) {\n    if (this.hasChanged('name')) {\n      return Group\n        .query('where', 'name', this.get('name'))\n        .fetch({})\n        .then(function (existing) {\n          if (existing) throw new ValidationError('Choose Another Name');\n        });\n    }\n  },\n}, {\n \n  getGroupWithRelated: function(group_id: number, withRelated: any){\n    return this.where({group_id:group_id}).fetch({withRelated:withRelated})\n  }\n});"]}